spring.application.name=gateway

server.port=8084

# #Eureka
# eureka.client.register-with-eureka=true
# eureka.client.fetch-registry=true
# eureka.client.service-url.defaultZone=http://registry-service.default:8085/eureka/
# # Use the IP address instead of hostname (prevents container ID issues)
# eureka.instance.prefer-ip-address=true

# # Optional but useful: give each instance a readable ID
# eureka.instance.instance-id=${spring.application.name}:${server.port}

# # Optional: Override the hostname so Eureka doesn't use random Docker hostname (like 38fb6440de62)
# eureka.instance.hostname=gateway

#Gateway
spring.cloud.gateway.routes[0].id=job-service
spring.cloud.gateway.routes[0].uri=http://job-service.default:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/jobs/**

spring.cloud.gateway.routes[1].id=company-service
spring.cloud.gateway.routes[1].uri=http://company-service.default:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/companies/**

spring.cloud.gateway.routes[2].id=reviews-service
spring.cloud.gateway.routes[2].uri=http://review-service.default:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/reviews/**