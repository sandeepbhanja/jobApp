networks:
  postgres:

volumes:
  postgres_data:
  pgadmin:

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root

      PGDATA: /data/postgres
    networks:
      - postgres
    volumes:
      - postgres_data:/data/postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: sandeep@gmail.com
      PGADMIN_DEFAULT_PASSWORD: root
    networks:
      - postgres
    restart: unless-stopped
  jobsmicroservice:
    container_name: jobsmicroservice
    build:
      context: ./Application/Java/jobsMicroservice
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - postgres
    restart: unless-stopped

  microservicesregistry:
    container_name: microservicesregistry
    build:
      context: ./Application/microservices
      dockerfile: dockerfile
    ports:
      - "8085:8085"
    networks:
      - postgres
    restart: unless-stopped
  company-service:
    container_name: company-services
    build:
      context: ./Application/Java/companyMicroservice
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - postgres
    depends_on:
      - postgres
    restart: unless-stopped
  reviewsmicroservice:
    container_name: reviewsmicroservice
    build:
      context: ./Application/Java/reviewsMicroservice
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    networks:
      - postgres
    depends_on:
      - postgres
    restart: unless-stopped

  config-service:
    container_name: config-server
    build:
      context: ./Config
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: unless-stopped