apiVersion: v1
kind: PersistentVolume
metadata:
  name: pgadmin-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  hostPath:
    path: /mnt/data/pgadmin
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-pvc
spec:
  volumeName: pgadmin-pv
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  hostPath:
    path: /mnt/data/postgres
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  volumeName: postgres-pv
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: registry-service
spec:
  selector:
    app: registry-service
  ports:
    - protocol: TCP
      port: 8085
      targetPort: 8085
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
spec:
  selector:
    app: pgadmin4
  ports:
    - port: 5050
      targetPort: 80
      protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: job-service
spec:
  selector:
    app: jobsmicroservice
  ports:
    - port: 8081
      targetPort: 8081
      protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-service
  template:
    metadata:
      labels:
        app: registry-service
    spec:
      containers:
        - name: registry-service
          image: sandeepbhanja/jobapp-registry-service:latest
          imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobsmicroservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jobsmicroservice
  template:
    metadata:
      labels:
        app: jobsmicroservice
    spec:
      containers:
        - name: jobsmicroservice
          image: sandeepbhanja/jobapp-jobsmicroservice:latest
          imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: Always
          env:
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "password"
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: pgadmin-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin4
  template:
    metadata:
      labels:
        app: pgadmin4
    spec:
      containers:
        - name: jobsmicroservice
          image: dpage/pgadmin4:latest
          imagePullPolicy: Always
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: "sandeep@gmail.com"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "password"
          volumeMounts:
            - mountPath: /var/lib/pgadmin/sessions
              name: pgadmin-storage
      volumes:
        - name: pgadmin-storage
          persistentVolumeClaim:
            claimName: pgadmin-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: company-service
spec:
  selector:
    matchLabels:
      app: company-service
  template:
    metadata:
      labels:
        app: company-service
    spec:
      containers:
        - name: company-service
          image: sandeepbhanja/jobapp-company-service:latest
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: company-service
spec:
  selector:
    app: company-service
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-service
spec:
  selector:
    matchLabels:
      app: review-service
  template:
    metadata:
      labels:
        app: review-service
    spec:
      containers:
        - name: review-service
          image: sandeepbhanja/jobapp-review-service:latest
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: review-service
spec:
  selector:
    app: review-service
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-service
spec:
  selector:
    matchLabels:
      app: config-service
  template:
    metadata:
      labels:
        app: config-service
    spec:
      containers:
        - name: config-service
          image: sandeepbhanja/jobapp-config-service:latest
          imagePullPolicy: Always 
---
apiVersion: v1
kind: Service
metadata:
  name: config-service
spec:
  selector:
    app: config-service
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-server
spec:
  selector:
    matchLabels:
      app: gateway-server
  template:
    metadata:
      labels:
        app: gateway-server
    spec:
      containers:
        - name: gateway-server
          image: sandeepbhanja/jobapp-gateway:latest
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-server
spec:
  selector:
    app: gateway-server
  ports:
    - protocol: TCP
      port: 8084
      targetPort: 8084
  type: LoadBalancer
---